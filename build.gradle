plugins {
    id 'java'
    id 'application'
}

repositories {
    google()
    mavenCentral()
    // Add the JitPack repository
    maven { url 'https://jitpack.io' }
    flatDir {
        dirs 'libs'
    }
}

dependencies {
    implementation 'org.ow2.asm:asm:9.5'
    implementation 'org.ow2.asm:asm-commons:9.5'
    implementation 'com.google.guava:guava:31.1-jre'
    implementation 'commons-io:commons-io:2.11.0'
    implementation 'org.apache.logging.log4j:log4j-core:2.20.0'
    implementation 'org.apache.logging.log4j:log4j-api:2.20.0'
    implementation 'com.android.tools.smali:smali:3.0.3'
    implementation 'com.android.tools.smali:smali-dexlib2:3.0.3'
    implementation 'com.android.tools.smali:smali-baksmali:3.0.3'
    implementation 'org.apktool:apktool-lib:2.9.0'

    // Use remote multidexlib2 dependency from JitPack
    implementation 'io.github.canny1913:multidexlib2:3.0.2'
    
    // You can now remove the local file implementation
    // implementation files('libs/multidexlib2-3.0.2.jar')
    
    // Use local Android jars
    compileOnly files("${System.getenv('ANDROID_HOME')}/platforms/android-33/android.jar")
}

application {
    mainClass.set('de.uni_passau.fim.auermich.instrumentation.basicblockcoverage.BasicBlockCoverage')
}

java {
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
}

task customFatJar(type: Jar) {
    manifest {
        attributes 'Main-Class': 'de.uni_passau.fim.auermich.instrumentation.basicblockcoverage.BasicBlockCoverage'
    }

    archiveFileName.set('basicBlockCoverage.jar')

    from {
        (configurations.runtimeClasspath.findAll { !it.path.endsWith(".pom") }).collect {
            it.isDirectory() ? it : zipTree(it)
        }
    }

    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    with jar
}